% Please use the skeleton file you have received in the
% invitation-to-submit email, where your data are already
% filled in. Otherwise please make sure you insert your
% data according to the instructions in PoSauthmanual.pdf
\documentclass[a4paper]{jpconf}
\usepackage{graphicx}

\begin{document}

\title{Software aspects of the Geant4 validation repository}

\author{Andrea~Dotti$^1$, Hans~Wenzel$^2$, Daniel~Elvira$^2$,
Krzysztof~Genser$^2$, Julia~Yarba$^2$, Federico~Carminati$^3$,
Gunter~Folger$^3$, Dmitri~Konstantinov$^{3,4}$, Witold~Pokorski$^3$ and
Alberto~Ribon$^3$}

\address{$^1$~SLAC National Accelerator Laboratory, 2575 Sand Hill Rd,
Menlo Park, CA 94025, USA;\@ $^2$~Fermilab PO Box 500, Batavia, IL 60510,
USA;\@ $^3$~CERN CH-1211 Geneva 23, Switzerland; $^4$~State Research Center
of Russian Federation, Institute for High Energy Physics, Protvino,
Russia}

\ead{adotti@slac.stanford.edu}

\begin{abstract}
The Geant4, GeantV and GENIE collaborations regularly
perform validation and regression tests for simulation results. 
DoSSiER ({\bf D}atabase {\bf o}f {\bf S}cientific {\bf Si}mulation and {\bf  E}xperimental {\bf R}esults) 
is being developed as a central repository to store the simulation results as well as the experimental data used for validation.
DoSSiER is easily accessible via a web application. In addition, a web service allows for programmatic access to the repository
to extract records in JSON or XML exchange formats. In this
article, we describe the functionality and the current status of
various components of DoSSiER as well as the technology choices we made.
\end{abstract}

\section{Introduction}
Software collaborations in high energy physics regularly perform
validation and regression tests for simulation results.
This is the case for the Geant4~\cite{ref:Geant4-4} collaboration and the 
developers of the GeantV~\cite{ref:GeantV} R\&D project, toolkits for the 
simulation of radiation-matter interaction. It is also the case for 
GENIE~\cite{ref:GENIE}, Monte Carlo event generator for neutrino interactions. 
A validation test compares simulation results with data obtained by
various experiments while a regression test compares results of two or more versions of the software for an observable.
As the areas of application expand, tests are improved and new tests are developed 
to insure that the physics processes are modeled correctly.  
As the number of regularly performed validation and regression
tests increases and the
collection of results grows, storing them and making them available to
members of participating collaborations and the user
community in general becomes a challenge. Therefore DoSSiER ({\bf
  D}atabase {\bf o}f {\bf S}cientific {\bf Si}mulation and {\bf
  E}xperimental {\bf R}esults) is being 
developed to collect and organize the materials in 
one central repository and to make this data easily available via a
web application and web service.
DoSSiER should be of general interest to collaborators and
the user community. For example it should help experimenters to find answers to questions like: 
\begin{itemize}
\item How well does the simulation describe the data of interest to the experiment? 
\item What data are actually used to validate the implemented physics?
\item Which of the various models best describe the data of interest to the experiment?
\item What are the benefits of switching to the latest improved
  version of the software?
\end{itemize}



\section{Requirements}
Below we  briefly list the requirements and the desired functionality. 
\begin{itemize}
\item It should be possible to store multidimensional experimental and simulation data used for
  validation in the form of arrays of data points and as histograms with
  meta-data. In addition, it should be possible to store complete plots
  with meta-data.
\item Provide an API (Application Program Interface) to the
  database.
\item Provide a web service which allows programmatic access.
  This allows the retrieval of records using any programming language that can handle HTTP requests and can
  parse the returned JSON/XML strings.  A C++ API is of particular
  interest since it allows access to DoSSiER records directly from C++
  validation jobs.
\item The web application should provide an easy-to-use web-interface
  providing search engines and easy-to-navigate menus with default values, and should allow the user to select and overlay 
 tests with experimental data. The actual plots are created on the fly.  
\item The web application and service should be based on modern Internet
  technologies and industry standards. It should also provide a fresh modern
  look and adhere to  all security requirements set  by the hosting
  laboratories.   
\end{itemize}

We expect a relatively modest data-volume and number of requests to the
system. The main users are the developers of the toolkits that will
periodically provide updates with new simulation results. The update on
the database with the new contributions will be centrally organized and we foresee
monthly update campaigns (for example synchronized with the release of the
Geant4 monthly releases). We expect that when the database will be
populated with more results, experiment experts interested in performances
of the simulation toolkits will regularly consult the webpages. In the
case the number of requests increases substantially the web-portal could
be  scaled adding new instances of the web service. We do not expect that
the usage of the system will impose scaling issue on the underlying
database.

\begin{figure}[ht]
\begin{center}
\includegraphics[width=35.5pc]{components.eps}
\end{center}
\caption{\label{fig1}Software components of DoSSiER.}
\end{figure}


\section{Software Components}
DoSSiER is comprised of the software components shown in
Figure~\ref{fig1}. Each component will be described in detail in
the following part of this section. All the technologies that we use
are very well integrated in the IDE (integrated development environment) of our choice, 
NetBeans~\cite{netbeans}. This greatly simplifies the development effort.

\begin{itemize}
\item {\bf Validationdb}  is a relational PostgreSQL database~\cite{postgresql}  that stores data in 
the form of images with meta-data, multidimensional histograms, and  arrays of data points.
Images of final plots (gif, jpeg, etc.) are stored as blobs  (binary large objects)  while histograms and data points are serialized
into arrays in the database.  
The meta-data provides a description and lists literature references to
the experimental data and other parameters that describe the
test/experimental result (e.g. Geant4 version, beam particle, beam energy/momentum,
reaction, target material, secondary particles etc.). Besides the
mandatory parameters  one can supply additional tags to provide
more information. 
For literature references we make use of the INSPIRE High-Energy Physics
Literature Database~\cite{inspire}. To facilitate fast access, we keep
a copy of the relevant information of the referenced articles in
DoSSiER, but a link to INSPIRE is provided in case that one wants to access
additional information (e.g.\ retrieve a copy of the full article). 

\item {\bf ValidationLib} is a multilayered Java API based on the
  data access object (DAO)~\cite{dao} software design pattern.
It provides an abstract interface to the database without exposing details of the database.
To provide a format for data exchange and/or for uploading results
into DoSSiER we use the Java Persistence  API~\cite{jpa} or gson~\cite{gson} which are Java libraries
for serialization and deserialization of Java Objects into and from
XML/JSON strings, respectively.

\item {\bf DoSSiER Web Application and Web Service~\cite{DoSSiER}}  offers menus that are easy to navigate, allow for interactive selection
 and overlay of compatible results. Data is compatible when observable and measurement variables reasonably agree. 
The application logic is such that only compatible data can be
selected via the provided menus.  
The web application also provides security and authentication to grant access to groups of functions and data that are internal to 
the participating collaborations, e.g.\ viewing results from development releases, upload of new test results and modification of
selected data. The  Web Application is based on Java Platform, Enterprise Edition (Java EE)~\cite{javaee}  and utilizes the  
PrimeFaces~\cite{primefaces} open source JSF (Java Server Faces) 
component. This is part of the JavaEE Platform and it provides
a Java specification for building component-based user
interfaces for web applications~\cite{jsf}. 
The database is accessed using the classes provided
by the Java API.\@ It is deployed on a GlassFish application server~\cite{glassfish} running on the
FermiCloud service~\cite{fermicloud}. 

\begin{figure}[ht]
\begin{center}
\includegraphics[width=30pc]{fig1.eps}
\end{center}
\caption{\label{fig2}
The DoSSiER entry page. It gives access to viewers of experimental data and Geant4 simulations.
In addition the menu on the right allows access to database statistics, the dictionary browser and provides access
to the RESTful 
web service.  At the moment the  GENIE and GeantV buttons are placeholders as adding data is still in progress.
}
\end{figure}


The DoSSiER Web Service is a RESTful~\cite{rest} web service based on
                JAX-RS~\cite{jaxrs} that allows programmatic retrieval of data e.g.\ by
  validation jobs. Currently the functionality is relatively limited
  in that it only allows for retrieving results or the
  retrieval of the dictionaries describing the meta-data via their
  primary database key, but we
  plan to extend the API with e.g.\ search commands.
\item {\bf DbReader}  is a C++ API providing access to data stored in
  DoSSiER  directly from C++ clients. This is used by selected
   Geant4 validation jobs to directly retrieve the experimental
  data for comparison from DoSSiER.\@  


\item {\bf Python tools}
Not shown in Figure~\ref{fig1} are the Python-based ancillary tools that we are using to read and convert  histograms and collections of data points from/to different data
  formats including  ROOT, ASCII (CSV) and the JSON format used by
  DoSSiER.\@
The files in  JSON/XML  format can then be used to  download from and
upload to DoSSiER.\@ Other functionality provided by this tool are the
ability to inspect and interact with histograms (matplotlib) and 
script integration with the command line tools (CLI). 
 \end{itemize}

\begin{figure}[ht]
\begin{center}
\includegraphics[width=30pc]{fig2.eps}
\end{center}
\caption{\label{fig3}
The DoSSiER dictionary browser allows to navigate the references, test descriptions
and the meta-data dictionaries used to describe the data stored in
        DoSSiER.\@
}
\end{figure}

\section{DoSSiER Views}
In this section we highlight a few selected views currently provided by
DoSSiER.\@ 
Figure~\ref{fig2} shows the DoSSiER entry page. It gives access to viewers of experimental data and Geant4
simulations. At the moment the  GENIE and GeantV buttons are placeholders as adding data is still in progress.
In addition
the menu on the right allows access to database statistics, the dictionary browser and provides access to the RESTful 
web service.  

Figure~\ref{fig3} shows the DoSSiER dictionary browser which allows to navigate the references, test descriptions
and the meta-data dictionaries used to describe the data stored in
DoSSiER.\@

Figure~\ref{fig4} shows the display (blue squares) of a Geant4 simulation estimating the total cross section of $\pi^-$ on a Carbon target
 as a function of kinetic energy. On the top of the view we find information describing the Geant4 test and the publications from 
which the data for physics validation was extracted. 
The menus on the top of the graph are automatically created based on the contents of the database. In this case, one can select results 
based on target material
(Pb, Cu, S, C, Au, Ag, Sn, Ca, Fe) and beam particle ($\pi^+,\pi^-$). If there are more variables to choose
from, then additional menus will be created.  Each test comes with a
set of defaults and  one automatically gets the default plot when initially selecting a
test. When a user selects the pull down menu for a given
variable, the fields of the preselected defaults are highlighted to
guide further refinement of the selection.  DoSSiER will search the database for any 
experimental results matching the meta-data of the test selection.    
In this case the search finds measurements from three different
publications (orange, green, red curves) and overlays them on the simulation result. 
For plotting we use the plotly.js~\cite{plotly} JavaScript library. 

Figure~\ref{fig5} shows a display of experimental data as a table, which shows values of the differential
cross section of proton production induced by a neutron beam on a Cu
target. The header of each table lists the meta-data (beam, reaction,
target, secondary, observable, \dots). DoSSiER allows the data to be downloaded in various formats (EXCEL, PDF, CSV, XML, JSON).
 


\begin{figure}[ht]
\begin{center}
\includegraphics[width=28pc]{fig3.eps}
\end{center}
\caption{\label{fig4}
Display of a Geant4 simulation (blue squares) estimating the total cross section of $\pi^-$ on a Carbon target as a function of
kinetic energy.  On the top we find information describing the Geant4 test and the publications from which the data for 
physics validation was extracted. 
The menus on the top of the graph are automatically created based on the contents of the database. In this case, one can select results 
based on target material
(Pb, Cu, S, C, Au, Ag, Sn, Ca, Fe) and beam particle ($\pi^+,\pi^-$). If there are more variables to choose
from, then additional menus will be created.  Each test comes with a
set of defaults and  one automatically gets the default plot when initially selecting a
test.  DoSSiER will search the database for any 
experimental results matching the meta-data of the test selection. 
In this case the search finds measurements from three different
publications (orange, green, red curves) and overlays them on the simulation result. 
}
\end{figure}


\begin{figure}[htb]
\begin{center}
\includegraphics[width=26pc]{ws4.eps}
\end{center}
\caption{\label{fig5} Display of Geant4 simulation data as a table. Shown are  differential
cross section values of proton production induced by a neutron beam on a Cu
target. The header of each table lists the meta-data (beam, reaction,
        target, secondary, observable \dots).
DoSSiER allows to download the data in various formats (EXCEL, PDF,  CSV, XML, JSON).}
\end{figure}


\section{Conclusions and Outlook}
DoSSiER provides a repository to collect and organize validation and regression test results and
the experimental data used for physics validation tests. The  web application component of DoSSiER allows easy access 
to the information for members of simulation collaborations and the general user community. 
The  web service component allows for programmatic access to the data
stored in DoSSiER.\@ 
We are in the process of adding new tests and experimental data to the repository. 
Originally we concentrated on Geant4 tests of hadronic and electromagnetic physics that are of interest for high energy physics 
experiments, but in the future we plan to include tests that are of interest in other areas such as medical and space science. Also
we are in the process of adding GEANIE and GeantV data in cooperation with the respective collaborations.
The website front-page (currently reachable at
\verb"http://g4devel.fnal.gov:8080/DoSSiER/") is already available to
the general public interested in providing feedback. 
Additional data-sets and simulation results are
expected in the near future and we plan to improve the website
based on the comments of the first users in the next few years, the
current priority being the extension of included simulations and data.
With the
addition of more data we expect that this tool will become the
main entry point to serve as result repository for both higher level
(e.g.\@ shower shapes in calorimeters) and microscopic (e.g.\@
cross-sections, final state multiplicities) validations. To achieve this
goal we are working in close collaboration with simulation experts. 
 \section*{References}

\begin{thebibliography}{99}
\bibitem{ref:Geant4-4}
 Allison J et al. 2016 {\it Nuclear Instruments and Methods in Physics
                Research A} {\bf 835} (186--225).
\bibitem{ref:GeantV}
 \verb|http://geant.cern.ch/|.
\bibitem{ref:GENIE}The GENIE Neutrino Monte Carlo Generator, arXiv: 0905.2517.
\bibitem{netbeans} {\it Welcome to Netbeans},
\verb"https://netbeans.org/".
\bibitem{postgresql} PostgreSQL,
\verb"http://www.postgresql.org/".
\bibitem{inspire} High-Energy Physics Literature Database,
   \verb"http://inspirehep.net"/.
\bibitem{dao} 
\verb"http://www.oracle.com/technetwork/java/dataaccessobject-138824.html".
\bibitem{jpa} 
 \verb''http://www.oracle.com/technetwork/java/javaee/tech/persistence-jsp-14004
9.html''.
\bibitem{gson} 
 \verb"https://github.com/google/gson".
\bibitem{DoSSiER}
\verb"http://g4validation.fnal.gov:8080/DoSSiER/".
\bibitem{javaee} 
 \verb"http://www.oracle.com/technetwork/java/javaee/overview/index.html".
\bibitem{primefaces} PrimeFaces Ultimate JSF Framework, 
\verb"http://www.primefaces.org/".
\bibitem{jsf} JavaServer Faces,
\verb"http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html"
\bibitem{glassfish} Glassfish Server,
 \verb"https://glassfish.java.net/".
\bibitem{fermicloud} FermiCloud,
 \verb"http://fclweb.fnal.gov/".
\bibitem{plotly} The open source JavaScript graphing library that powers Plotl
y,
\verb"https://plot.ly/javascript/".
 \bibitem{rest}Representational state transfer (REST) 
 \verb"https://en.wikipedia.org/wiki/Representational_state_transfer".
\bibitem{jaxrs} Java API for RESTful Services (JAX-RS),
 \verb"https://jax-rs-spec.java.net/".


\end{thebibliography}

\end{document}
